{
  "version": 3,
  "sources": ["../../taleem-pivot-deckbuilder/Slides.js", "../../taleem-pivot-deckbuilder/DeckBuilder.js"],
  "sourcesContent": ["export class Slides {\n  constructor() {\n    this.slidesArray = [];\n    this.currentTime = 0; // Internal clock\n  }\n\n  eq(end, data) {\n    this._add(\"eq\", end, data);\n  }\n  \n  quoteSlide(end, data) {\n    this._add(\"quoteSlide\", end, data);\n  }\n\n  cornerWordsSlide(end, data) {\n    this._add(\"cornerWordsSlide\", end, data);\n  }\n\n  titleSlide(end, data) {\n    this._add(\"titleSlide\", end, data);\n  }\n\n  imageSlide(end, data) {\n    this._add(\"imageSlide\", end, data);\n  }\n\n  imageLeftBulletsRight(end, data) {\n    this._add(\"imageLeftBulletsRight\", end, data);\n  }\n\n  imageRightBulletsLeft(end, data) {\n    this._add(\"imageRightBulletsLeft\", end, data);\n  }\n\n  imageWithCaption(end, data) {\n    this._add(\"imageWithCaption\", end, data);\n  }\n\n  imageWithTitle(end, data) {\n    this._add(\"imageWithTitle\", end, data);\n  }\n\n  table(end, data) {\n    this._add(\"table\", end, data);\n  }\n\n  statistic(end, data) {\n    this._add(\"statistic\", end, data);\n  }\n\n  barChart(end, data) {\n    this._add(\"barChart\", end, data);\n  }\n\n  twoColumnText(end, data) {\n    this._add(\"twoColumnText\", end, data);\n  }\n\n  donutChart(end, data) {\n    this._add(\"donutChart\", end, data);\n  }\n\n  titleAndSubtitle(end, data) {\n    this._add(\"titleAndSubtitle\", end, data);\n  }\n\n  contactSlide(end, data) {\n    this._add(\"contactSlide\", end, data);\n  }\n\n  quoteWithImage(end, data) {\n    this._add(\"quoteWithImage\", end, data);\n  }\n\n  bigNumber(end, data) {\n    this._add(\"bigNumber\", end, data);\n  }\n\n  bulletList(end, data) {\n    this._add(\"bulletList\", end, data);\n  }\n\n  _add(type, end, data) {\n    const start = this.currentTime;\n\n    if (end <= start) {\n      throw new Error(`Invalid slide timing: end (${end}) must be greater than start (${start})`);\n    }\n\n    this.currentTime = end;\n\n    const patchedData = data.map(item =>\n      item.showAt === undefined ? { ...item, showAt: 0 } : item\n    );\n\n    const slide = {\n      type,\n      start,\n      end,\n      data: patchedData\n    };\n\n    this.slidesArray.push(slide);\n  }\n\n  [Symbol.iterator]() {\n    return this.slidesArray.values();\n  }\n\n  toJSON() {\n    return this.slidesArray;\n  }\n}\n", "// routes/pivot/deckbuilder/DeckBuilder.js\n\nimport { Slides } from './Slides.js';\n\nexport default class DeckBuilder {\n  constructor() {\n    this.theme = null;\n    this.background = null;\n    this.slides = new Slides();\n    this.s = this.slides;\n  }\n\n  setTheme(themeName) {\n    this.theme = themeName;\n  }\n\n  setBackground(background) {\n    this.background = background;\n  }\n\n  build() {\n    return this.slides.toJSON();\n  }\n  \n}\n"],
  "mappings": "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",
  "names": []
}
